{"version":3,"file":"static/js/457.60220664.chunk.js","mappings":"kNACA,GAAgB,KAAO,sBAAsB,KAAO,sBAAsB,MAAQ,uBAAuB,KAAO,sBAAsB,KAAO,uB,2BC2D7I,MArDA,YAA+B,IAAZA,EAAW,EAAXA,QACjB,GAAwBC,EAAAA,EAAAA,UAAS,QAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KA0BA,OAxBAC,EAAAA,EAAAA,YAAU,WACR,GAAIJ,EAAQK,QAGV,OAFAJ,EAAW,SACXF,EAAQ,QAGVE,EAAW,IACXF,EAAQ,YACRO,EAAAA,EAAAA,GAAS,QAASV,EAAQW,MAAM,GAAI,EAAG,WACpCC,MAAK,SAAAC,GACAA,IACFR,EAAWQ,GACXV,EAAQ,gBAGXW,OAAM,SAAAC,GACLR,EAASQ,GACTZ,EAAQ,iBAGX,KAKD,UAAC,EAAAa,SAAD,WACY,YAATd,IAAsB,SAACe,EAAA,EAAD,IACb,SAATf,IAAmB,iCACV,aAATA,IAAuB,mBAAQgB,UAAWC,EAAAA,OAAnB,SAA8Bb,EAAMc,UAClD,aAATlB,IAAwB,gBAAIgB,UAAWC,EAAAA,KAAf,UACK,IAA3Bf,EAAQK,QAAQY,SAAgB,wCAChCjB,EAAQK,QAAQY,OAAS,GAAKjB,EAAQK,QAAQa,KAAI,SAAAT,GAAE,OACnD,gBAAgBK,UAAWC,EAAAA,KAA3B,WACE,eAAID,UAAWC,EAAAA,MAAf,SAAyBN,EAAGU,UAC5B,cAAGL,UAAWC,EAAAA,KAAd,SAAuBN,EAAGW,WAC1B,cAAGN,UAAWC,EAAAA,KAAd,SAAuBN,EAAGY,eAHnBZ,EAAGa","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__oGqpj\",\"item\":\"Reviews_item__ZU38j\",\"title\":\"Reviews_title__h7fK9\",\"text\":\"Reviews_text__FPDAp\",\"date\":\"Reviews_date__9Dd5f\"};","import fetchApi from '../../AppService';\r\nimport { useEffect, useState } from 'react/cjs/react.development';\r\nimport s from './Reviews.module.css'\r\nimport Loader from '../Loader/Loader'\r\nimport { Fragment } from 'react/cjs/react.production.min';\r\nimport propTypes from 'prop-types';\r\n\r\nfunction Reviews({ modieId }) {\r\n  const [view, setView] = useState('idle')\r\n  const [reviews, setReviews] = useState({})\r\n  const [error, setError] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (reviews.results) {\r\n      setReviews({})\r\n      setView('idle')\r\n      return\r\n    }\r\n    setReviews({})\r\n    setView('pending')\r\n    fetchApi('movie', modieId.slice(3), 1, 'reviews')\r\n      .then(el => {\r\n        if (el) {\r\n          setReviews(el)\r\n          setView('resolved')\r\n        }\r\n      })\r\n      .catch(errorRejected => {\r\n        setError(errorRejected);\r\n        setView('rejected')\r\n      }\r\n      )\r\n  }, [])\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      {view === 'pending' && <Loader />}\r\n      {view === 'idle' && <div>...</div>}\r\n      {view === 'rejected' && <strong className={s.strong}>{error.message}</strong>}\r\n      {view === 'resolved' && (<ul className={s.list}>\r\n        {reviews.results.length === 0 && <li>No comments</li>}\r\n        {reviews.results.length > 0 && reviews.results.map(el =>\r\n          <li key={el.id} className={s.item}>\r\n            <h3 className={s.title}>{el.author}</h3>\r\n            <p className={s.text}>{el.content}</p>\r\n            <p className={s.date}>{el.created_at}</p>\r\n          </li>\r\n        )}\r\n\r\n      </ul>)}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nReviews.propTypes = {\r\n  modieId: propTypes.string.isRequired\r\n}\r\n\r\nexport default Reviews"],"names":["modieId","useState","view","setView","reviews","setReviews","error","setError","useEffect","results","fetchApi","slice","then","el","catch","errorRejected","Fragment","Loader","className","s","message","length","map","author","content","created_at","id"],"sourceRoot":""}