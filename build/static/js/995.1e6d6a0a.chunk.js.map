{"version":3,"file":"static/js/995.1e6d6a0a.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/DetailedMovieData/DetailedMovieData.module.css?84dd","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.js","components/DetailedMovieData/DetailedMovieData.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"box\":\"DetailedMovieData_box__djrTy\",\"buttonBox\":\"DetailedMovieData_buttonBox__JHkXf\",\"link\":\"DetailedMovieData_link__Ao9JJ\",\"selected\":\"DetailedMovieData_selected__kp+ZI\"};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\",\"title\":\"Cast_title__0cH9s\",\"noImage\":\"Cast_noImage__2zKj4\"};","import fetchApi from '../../AppService';\nimport { useEffect, useState, Fragment } from 'react'\nimport s from './Cast.module.css'\nimport Loader from '../Loader/Loader';\nimport propTypes from 'prop-types';\n\n\nfunction Cast({ movieId }) {\n  const [view, setView] = useState('idle')\n  const [cast, setCast] = useState('')\n  const [error, setError] = useState('')\n\n\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n\n  const fetchMovies = () => {\n    try {\n      if (cast.cast) {\n        setCast('')\n        return\n      }\n      setCast('')\n      setView('pending')\n      fetchApi('movie', movieId, '', 'credits')\n        .then(el => {\n          if (el) {\n            setCast(el)\n            setView('resolved')\n          }\n        })\n        .catch(errorRejected => {\n          setError(errorRejected);\n          setView('rejected')\n        }\n        )\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  useEffect(() => {\n\n    movieId && fetchMovies()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [movieId])\n\n  return (\n    <Fragment>\n      {view === 'pending' && <Loader />}\n      {view === 'idle' && <div>...</div>}\n      {view === 'rejected' && <strong className={s.strong}>{error.message}</strong>}\n      {view === 'resolved' && (\n        <ul className={s.list}>\n          {cast.cast && cast.cast.map(el =>\n            <li key={el.cast_id} className={s.item}>\n              {el.profile_path ? (\n                <img className={s.portrait} src={IMG_URL + el.profile_path} alt={el.name} loading=\"lazy\" />\n              ) : (\n                <div className={s.noImage}>No photo</div>\n              )\n              }\n              <h3 className={s.title}>{el.name}</h3>\n            </li>\n          )}\n        </ul>\n      )}\n\n      {/* <p>{movieId}</p> */}\n\n    </Fragment>\n  )\n}\n\nCast.propTypes = {\n  movieId: propTypes.string.isRequired\n}\n\n\nexport default Cast","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\",\"item\":\"Reviews_item__DJKij\",\"title\":\"Reviews_title__t265C\",\"text\":\"Reviews_text__EqLvx\",\"date\":\"Reviews_date__HEDa0\"};","import fetchApi from '../../AppService';\nimport { useEffect, useState, Fragment } from 'react'\nimport s from './Reviews.module.css'\nimport Loader from '../Loader/Loader'\nimport propTypes from 'prop-types';\n\nfunction Reviews({ movieId }) {\n  const [view, setView] = useState('idle')\n  const [reviews, setReviews] = useState({})\n  const [error, setError] = useState('')\n\n  useEffect(() => {\n    if (reviews.results) {\n      setReviews({})\n      setView('idle')\n      return\n    }\n    setReviews({})\n    setView('pending')\n    fetchApi('movie', movieId, 1, 'reviews')\n      .then(el => {\n        if (el) {\n          setReviews(el)\n          setView('resolved')\n        }\n      })\n      .catch(errorRejected => {\n        setError(errorRejected);\n        setView('rejected')\n      }\n      )\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n\n\n  return (\n    <Fragment>\n      {view === 'pending' && <Loader />}\n      {view === 'idle' && <div>...</div>}\n      {view === 'rejected' && <strong className={s.strong}>{error.message}</strong>}\n      {view === 'resolved' && (<ul className={s.list}>\n        {reviews.results.length === 0 && <li>No comments</li>}\n        {reviews.results.length > 0 && reviews.results.map(el =>\n          <li key={el.id} className={s.item}>\n            <h3 className={s.title}>{el.author}</h3>\n            <p className={s.text}>{el.content}</p>\n            <p className={s.date}>{el.created_at}</p>\n          </li>\n        )}\n\n      </ul>)}\n    </Fragment>\n  )\n}\n\nReviews.propTypes = {\n  movieId: propTypes.string.isRequired\n}\n\nexport default Reviews","import Section from '../Section/Section'\nimport s from './DetailedMovieData.module.css'\nimport { useParams, NavLink } from 'react-router-dom';\nimport { ROUTERS } from '../../consts';\nimport { Route } from 'react-router-dom';\nimport Cast from '../Cast/Cast'\nimport Reviews from '../Reviews/Reviews'\n\n\n\nfunction DetailedMovieData() {\n  const { id } = useParams()\n\n  return (\n    <Section>\n      <div className={s.box}>\n        <div className={s.buttonBox}>\n          <NavLink to={ROUTERS.MOVIES + `/${id}` + ROUTERS.CAST} exact activeClassName={s.selected} className={s.link}>Cast</NavLink>\n          <NavLink to={ROUTERS.MOVIES + `/${id}` + ROUTERS.REVIEWS} exact activeClassName={s.selected} className={s.link}>Reviews</NavLink>\n        </div>\n        {/* <Suspense fallback={<Loader />}> */}\n        <Route path={ROUTERS.MOVIES + `/${id}` + ROUTERS.CAST} render={props => <Cast movieId={id.slice(3)} />} />\n        <Route path={ROUTERS.MOVIES + `/${id}` + ROUTERS.REVIEWS} render={props => <Reviews movieId={id.slice(3)} />} />\n\n        {/* </Suspense> */}\n      </div>\n    </Section>\n  )\n}\n\nexport default DetailedMovieData"],"names":["movieId","useState","view","setView","cast","setCast","error","setError","useEffect","fetchApi","then","el","catch","errorRejected","console","log","fetchMovies","Fragment","Loader","className","s","message","map","profile_path","src","alt","name","loading","cast_id","reviews","setReviews","results","length","author","content","created_at","id","useParams","Section","to","ROUTERS","exact","activeClassName","Route","path","render","props","slice"],"sourceRoot":""}