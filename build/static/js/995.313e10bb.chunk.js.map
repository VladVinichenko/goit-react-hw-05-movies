{"version":3,"file":"static/js/995.313e10bb.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/DetailedMovieData/DetailedMovieData.module.css?84dd","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.js","components/DetailedMovieData/DetailedMovieData.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"box\":\"DetailedMovieData_box__p+Zs8\",\"buttonBox\":\"DetailedMovieData_buttonBox__X-ZPy\",\"link\":\"DetailedMovieData_link__hH8BL\",\"selected\":\"DetailedMovieData_selected__Diqyi\"};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__-ZWZl\",\"item\":\"Cast_item__fph6y\",\"title\":\"Cast_title__j7QfX\",\"noImage\":\"Cast_noImage__5Qols\"};","import fetchApi from '../../AppService';\r\nimport { useEffect, useState, Fragment } from 'react'\r\nimport s from './Cast.module.css'\r\nimport Loader from '../Loader/Loader';\r\nimport propTypes from 'prop-types';\r\n\r\n\r\nfunction Cast({ movieId }) {\r\n  const [view, setView] = useState('idle')\r\n  const [cast, setCast] = useState('')\r\n  const [error, setError] = useState('')\r\n\r\n\r\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\r\n\r\n\r\n  const fetchMovies = () => {\r\n    try {\r\n      if (cast.cast) {\r\n        setCast('')\r\n        return\r\n      }\r\n      setCast('')\r\n      setView('pending')\r\n      fetchApi('movie', movieId, '', 'credits')\r\n        .then(el => {\r\n          if (el) {\r\n            setCast(el)\r\n            setView('resolved')\r\n          }\r\n        })\r\n        .catch(errorRejected => {\r\n          setError(errorRejected);\r\n          setView('rejected')\r\n        }\r\n        )\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    movieId && fetchMovies()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [movieId])\r\n\r\n  return (\r\n    <Fragment>\r\n      {view === 'pending' && <Loader />}\r\n      {view === 'idle' && <div>...</div>}\r\n      {view === 'rejected' && <strong className={s.strong}>{error.message}</strong>}\r\n      {view === 'resolved' && (\r\n        <ul className={s.list}>\r\n          {cast.cast && cast.cast.map(el =>\r\n            <li key={el.cast_id} className={s.item}>\r\n              {el.profile_path ? (\r\n                <img className={s.portrait} src={IMG_URL + el.profile_path} alt={el.name} loading=\"lazy\" />\r\n              ) : (\r\n                <div className={s.noImage}>No photo</div>\r\n              )\r\n              }\r\n              <h3 className={s.title}>{el.name}</h3>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      )}\r\n\r\n      {/* <p>{movieId}</p> */}\r\n\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nCast.propTypes = {\r\n  movieId: propTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default Cast","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__oGqpj\",\"item\":\"Reviews_item__ZU38j\",\"title\":\"Reviews_title__h7fK9\",\"text\":\"Reviews_text__FPDAp\",\"date\":\"Reviews_date__9Dd5f\"};","import fetchApi from '../../AppService';\r\nimport { useEffect, useState, Fragment } from 'react'\r\nimport s from './Reviews.module.css'\r\nimport Loader from '../Loader/Loader'\r\nimport propTypes from 'prop-types';\r\n\r\nfunction Reviews({ movieId }) {\r\n  const [view, setView] = useState('idle')\r\n  const [reviews, setReviews] = useState({})\r\n  const [error, setError] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (reviews.results) {\r\n      setReviews({})\r\n      setView('idle')\r\n      return\r\n    }\r\n    setReviews({})\r\n    setView('pending')\r\n    fetchApi('movie', movieId, 1, 'reviews')\r\n      .then(el => {\r\n        if (el) {\r\n          setReviews(el)\r\n          setView('resolved')\r\n        }\r\n      })\r\n      .catch(errorRejected => {\r\n        setError(errorRejected);\r\n        setView('rejected')\r\n      }\r\n      )\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      {view === 'pending' && <Loader />}\r\n      {view === 'idle' && <div>...</div>}\r\n      {view === 'rejected' && <strong className={s.strong}>{error.message}</strong>}\r\n      {view === 'resolved' && (<ul className={s.list}>\r\n        {reviews.results.length === 0 && <li>No comments</li>}\r\n        {reviews.results.length > 0 && reviews.results.map(el =>\r\n          <li key={el.id} className={s.item}>\r\n            <h3 className={s.title}>{el.author}</h3>\r\n            <p className={s.text}>{el.content}</p>\r\n            <p className={s.date}>{el.created_at}</p>\r\n          </li>\r\n        )}\r\n\r\n      </ul>)}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nReviews.propTypes = {\r\n  movieId: propTypes.string.isRequired\r\n}\r\n\r\nexport default Reviews","import Section from '../Section/Section'\r\nimport s from './DetailedMovieData.module.css'\r\nimport { useParams, NavLink } from 'react-router-dom';\r\nimport { ROUTERS } from '../../consts';\r\nimport { Route } from 'react-router-dom';\r\nimport Cast from '../Cast/Cast'\r\nimport Reviews from '../Reviews/Reviews'\r\n\r\n\r\n\r\nfunction DetailedMovieData() {\r\n  const { id } = useParams()\r\n\r\n  return (\r\n    <Section>\r\n      <div className={s.box}>\r\n        <div className={s.buttonBox}>\r\n          <NavLink to={ROUTERS.MOVIES + `/${id}` + ROUTERS.CAST} exact activeClassName={s.selected} className={s.link}>Cast</NavLink>\r\n          <NavLink to={ROUTERS.MOVIES + `/${id}` + ROUTERS.REVIEWS} exact activeClassName={s.selected} className={s.link}>Reviews</NavLink>\r\n        </div>\r\n        {/* <Suspense fallback={<Loader />}> */}\r\n        <Route path={ROUTERS.MOVIES + `/${id}` + ROUTERS.CAST} render={props => <Cast movieId={id.slice(3)} />} />\r\n        <Route path={ROUTERS.MOVIES + `/${id}` + ROUTERS.REVIEWS} render={props => <Reviews movieId={id.slice(3)} />} />\r\n\r\n        {/* </Suspense> */}\r\n      </div>\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport default DetailedMovieData"],"names":["movieId","useState","view","setView","cast","setCast","error","setError","useEffect","fetchApi","then","el","catch","errorRejected","console","log","fetchMovies","Fragment","Loader","className","s","message","map","profile_path","src","alt","name","loading","cast_id","reviews","setReviews","results","length","author","content","created_at","id","useParams","Section","to","ROUTERS","exact","activeClassName","Route","path","render","props","slice"],"sourceRoot":""}